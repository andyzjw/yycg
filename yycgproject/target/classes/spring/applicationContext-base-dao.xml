<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">
<!-- 配置SqlSessionFactory
从spring和mybatis的整合包中获取
 -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 加载数据源 -->
    <property name="dataSource" ref="dataSource"/>
    <!-- 配置SqlMapConfig.xml -->
    <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
	<!-- 引入mapper映射文件 -->
	<!-- <property name="mapperLocations" value="classpath:yycg/base/dao/*.xml"></property> -->
</bean>

<!-- 使用MapperFactoryBean 生成mapper的代理对象
在mybatis和spring的整合包中
-->

<!-- <bean id="sysuserMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
  配置mapper接口
  <property name="mapperInterface" value="yycg.base.dao.SysuserMapper"/>
  配置sqlSessionFactory
  <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
</bean>
 -->
<!--配置 mapper自动扫描器
 bean名称就是mapper类型（首字母小写）
 -->
<!-- 配置转换器,对于在basePackage中设置的包(包括子包)下的接口，
	如果在Mapper.xml文件中定义过,	将被转换成spring的bean(实例对象)，
	再将转换好的bean通过@Autowired注解向对应的接口对象注入-->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  <!--  配置扫描包路径 ，如果扫描多个包路径，中间使用半角逗号分隔 -->
   <property name="basePackage" value="yycg.base.dao"/>
    <!-- 配置SqlSessionFactory -->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
</bean>
</beans>